generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model academy {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String   @db.VarChar(255)
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team       team[]
}

model attendance {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id        String        @db.Uuid
  practice_plan_id String        @db.Uuid
  attended         Boolean
  created_at       DateTime      @default(now()) @db.Timestamp(6)
  updated_at       DateTime      @default(now()) @db.Timestamp(6)
  player           player        @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  practice_plan    practice_plan @relation(fields: [practice_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model coach {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String          @db.Uuid
  team_id       String          @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  team          team            @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user          user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  practice_plan practice_plan[]
}

model performance {
  id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  player_id        String        @db.Uuid
  practice_plan_id String        @db.Uuid
  rating           Int
  feedback         String?
  created_at       DateTime      @default(now()) @db.Timestamp(6)
  updated_at       DateTime      @default(now()) @db.Timestamp(6)
  player           player        @relation(fields: [player_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  practice_plan    practice_plan @relation(fields: [practice_plan_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model player {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id     String        @db.Uuid
  team_id     String        @db.Uuid
  position    String?       @db.VarChar(50)
  birth_date  DateTime?     @db.Date
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  attendance  attendance[]
  performance performance[]
  team        team          @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model practice_plan {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  coach_id    String        @db.Uuid
  team_id     String        @db.Uuid
  title       String        @db.VarChar(255)
  description String?
  date        DateTime      @db.Date
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  attendance  attendance[]
  performance performance[]
  coach       coach         @relation(fields: [coach_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team        team          @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String          @db.VarChar(255)
  academy_id    String          @db.Uuid
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  coach         coach[]
  player        player[]
  practice_plan practice_plan[]
  academy       academy         @relation(fields: [academy_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  academy     academy[]
  coach       coach[]
  player      player[]
}
